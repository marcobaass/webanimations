---
import '../assets/reset.css'
import '../assets/global.css'

import Navbar from '../components/Navbar.astro'
import HeroTextScramble from '../components/HeroTextScramble.astro'
import ImagePuzzle from '../components/ImagePuzzle.astro';
import ImagePuzzleText from '../components/ImagePuzzleText.astro';
import SVGMorph from '../components/SVGMorph.astro';
import TextHighlighting from '../components/TextHighlighting.astro';
import Footer from '../components/Footer.astro';
import CursorFollower from '../components/CursorFollower.astro';
---
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Webanimations</title>
</head>

<body>
  <CursorFollower />
  <div class="page-transition"></div>
  <Navbar />
  <header>
  </header>

  <main id="site-main">
    <div class="main-wrapper">
      <HeroTextScramble />
      <div id="puzzle" class="target-section">
        <ImagePuzzleText />
        <ImagePuzzle gridCols={5} gridRows={3}/>
      </div>
      <TextHighlighting />
      <SVGMorph />
    </div>
  </main>
  <div id="scroll-space">

  </div>
  <footer id="site-footer">
    <Footer />
  </footer>

  <script src="../scripts/lenis.js"></script>

  <script>
  // This function will run once the entire HTML document is loaded.
  document.addEventListener('DOMContentLoaded', () => {

    // We add a tiny delay (100ms) to ensure Lenis is fully initialized and
    // assigned to `window.lenis` before we try to use it.
    setTimeout(() => {

      // Try to get the Lenis instance that we exposed to the window object.
      const lenis = window.lenis;

      // A quick check to make sure Lenis was found. If not, something is wrong
      // with Prep Step A, and the smooth scroll with offset won't work.
      if (!lenis) {
        console.warn("Lenis instance not found. Anchor scrolling will use browser default.");
        return; // Stop this script from running further if Lenis isn't available.
      }

      // Find ALL <a> (anchor) tags whose 'href' attribute starts with a '#' symbol.
      // These are typically your internal page links.
      document.querySelectorAll('a[href^="#"]').forEach(anchorLink => {

        // For each of these anchor links, add an event listener for when they are clicked.
        anchorLink.addEventListener('click', function (event) {

          // Get the value of the 'href' attribute (e.g., "#puzzle").
          const targetId = this.getAttribute('href');

          // Make sure the href is actually an ID and not just a standalone '#' (which is common for empty links).
          if (targetId && targetId !== '#') {

            // *** CRUCIAL STEP: Prevent the browser's default jump behavior! ***
            // If we don't do this, the browser will jump instantly, and Lenis won't get a chance.
            event.preventDefault();

            if (targetId === '#footer') {
              // Instead of trying to scroll to the fixed footer,
              // scroll to the very bottom of the document
              lenis.scrollTo('bottom', {
                duration: 1.2,
                easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),
              });
              return;
            }

            // Find the actual HTML element on the page that has the ID specified in the link.
            // For example, if targetId is "#puzzle", this finds <div id="puzzle">.
            const targetElement = document.querySelector(targetId);

            // If the target element was successfully found...
            if (targetElement) {
              // Define how many pixels *above* the target element you want to stop scrolling.
              // For example, if you have a 80px tall fixed header, setting this to 80
              // will make the target stop 80px below the top of the viewport.
              const desiredOffsetPixels = 100; // Adjust this value (in pixels) as needed!

              // Tell the Lenis instance to scroll to our target element.
              lenis.scrollTo(targetElement, {
                // The 'offset' in Lenis is tricky:
                //   - A positive offset means scroll PAST the target.
                //   - A NEGATIVE offset means scroll *BEFORE* the target.
                // We want to stop *before* the target by 'desiredOffsetPixels',
                // so the target appears 'desiredOffsetPixels' from the top.
                offset: -desiredOffsetPixels,

                duration: 1.2, // How long the scroll animation should take in seconds (e.g., 1.2s).

                // This is an easing function for a smoother animation.
                // You can experiment with different easing functions if you like.
                easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),
              });
            }
          }
        });
      });

    }, 100); // The setTimeout ends here.
  }); // The DOMContentLoaded listener ends here.
</script>

</body>

</html>

<style>

  body {
    position: relative;
  }

  #site-main {
    position: relative;
    z-index: 2;
    width: 100%;
    border-radius: 0 0 50px 50px; /* same radius as height in footer */
    background-color: white;
  }

  .main-wrapper {
    margin: 0 auto;
    max-width: 1440px;
  }

  #site-footer {
    position: fixed;
    margin-top: 6rem;
    width: 100%;
    bottom: 0;
    left:0;
    z-index: 1;
  }

  @keyframes slideUp {
    0% {
      transform: translateY(0%);
    }
    100% {
      transform: translateY(-100%);
    }
  }

  #puzzle {
    display: flex;
    flex-wrap: wrap;
    max-width: 1240px;
    margin: 0 auto;
    justify-content: space-between;
    gap: var(--space-2xl);
  }

</style>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  // gsap.registerPlugin(ScrollTrigger);

  const footer = document.querySelector(".footer") as HTMLElement;
  const scrollSpace = document.getElementById('scroll-space')
  const footerHeight = footer.offsetHeight - 50; // 50px equal to border radius in #site-main


  gsap.set(scrollSpace, {
    height: footerHeight
  })
</script>
