---

---

<nav>
  <h2>Web Animations</h2>
  <div class="menu">
    <div class="highlighter"></div>
    <div class="menu-content">
      <h3 class="category">Home</h3>
      <h3 class="category">Puzzle</h3>
      <h3 class="category">menue 3</h3>
      <h3 class="category">menue 4</h3>
    </div>
  </div>
</nav>

<style>
  nav {
    position: sticky;
    top: 0.75rem;
    margin: 0 auto;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 3%;
    background-color: var(--clr-two);
    max-width: 1440px;
    border-radius: 50px;
  }

  .menu {
    position: relative;
    display: flex;
  }

  .menu-content {
    display: flex;
    gap: 2em;
    position: relative;
    z-index: 1;
    align-items: center;
  }

  .category {
    padding: 0.2em 0.6em;
    cursor: pointer;
    position: relative;
    transition: color 0.2s ease;
  }

  h3.category  {
    line-height: 1;
  }

  .category:hover {
    color: rgb(38, 38, 38);
  }

  .highlighter {
    position: absolute;
    top: 0;
    left: 0;
    /* height: 100%; */
    width: 0;
    background-color: var(--clr-one);
    border-radius: 50px;
    opacity: 0;
    z-index: 0;
    pointer-events: none;
  }

</style>

<script>
  import { gsap } from "gsap";

  const menu = document.querySelector('.menu');
  const menuContent = document.querySelector('.menu-content');
  const highlighter = document.querySelector('.highlighter');
  const categories = document.querySelectorAll('.category');

  let previousCategory = null;
  let activeTimeline = null;

  let movementTimer = null;
  let latestTargetCategory = null;
  const DEBOUNCE_DELAY = 125;

  function executeAnimationLogic(targetCategory) {
    if (!targetCategory) {
      console.error("executeAnimationLogic called without a targetCategory!");
      return;
    }
    if (activeTimeline) {
        activeTimeline.kill();
      }
      const menuContentRect = menuContent.getBoundingClientRect();
      const categoryRect = targetCategory.getBoundingClientRect();

      const targetLeft = categoryRect.left - menuContentRect.left;
      const targetWidth = categoryRect.width;
      const targetHeight = categoryRect.height;
      const targetTop = categoryRect.top - menuContentRect.top;

      console.log("Target Left:", targetLeft, "Target Width:", targetWidth);

      gsap.set(highlighter, {
        top: targetTop,
        height: targetHeight
      });

      activeTimeline = gsap.timeline();

      if (gsap.getProperty(highlighter, "opacity") == 0) {

        gsap.set(highlighter, {
          left: targetLeft,
          width: targetWidth,
        })

        activeTimeline.to(highlighter, {
          opacity: 1,
          duration: 0.2,
        })

      } else {
        if (previousCategory !== targetCategory && previousCategory) {
          const prevCategoryRect = previousCategory.getBoundingClientRect();
          const prevLeftRelative = prevCategoryRect.left - menuContentRect.left;
          const prevWidth = prevCategoryRect.width;
          const expandLeft = Math.min(targetLeft, prevLeftRelative);
          const expandRight = Math.max((targetLeft + targetWidth), (prevLeftRelative + prevWidth));
          const expandWidth = expandRight - expandLeft;

          activeTimeline
            .to(highlighter, {
              left: expandLeft,
              width: expandWidth,
              duration: 0.2,
              ease: "power2.inOut"
            })
            .to(highlighter, {
              left: targetLeft,
              width: targetWidth,
              duration: 0.2,
              ease: "power2.inOut"
            })
        } else {
          activeTimeline
            .to(highlighter, {
              left: targetLeft,
              width: targetWidth,
              opacity: 1,
              duration: 0.2,
              ease: "power2.inOut"
            })
        }
      }
      previousCategory = targetCategory;
  }

  categories.forEach((category) => {
    category.addEventListener('mouseenter', () => {
      clearTimeout(movementTimer);

      latestTargetCategory = category;

      movementTimer = setTimeout(() => {
        executeAnimationLogic(latestTargetCategory);
      }, DEBOUNCE_DELAY);
    });
  })

  menu.addEventListener('mouseleave', () => {
    if(activeTimeline) {
      activeTimeline.kill();
    }
    clearTimeout(movementTimer);
    activeTimeline = gsap.to(highlighter, { opacity: 0, duration: 0.3, ease: "power2.out",})
    previousCategory = null;
    latestTargetCategory = null;
  })
</script>
