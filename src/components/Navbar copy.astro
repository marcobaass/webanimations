---

---

<nav>
  <h2>Web Animations</h2>
  <div class="menu">
    <div class="highlighter"></div>
    <div class="menu-content">
      <h3 class="category">Home</h3>
      <h3 class="category">Puzzle</h3>
      <h3 class="category">menue 3</h3>
      <h3 class="category">menue 4</h3>
    </div>
  </div>
</nav>

<style>
  nav {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 5%;
    min-height: 4.5rem;
  }

  .menu {
    position: relative;
    display: flex;
  }

  .menu-content {
    display: flex;
    gap: 2em;
    position: relative;
    z-index: 1;
  }

  .category {
    padding: 0.5em 1em;
    cursor: pointer;
    position: relative;
    transition: color 0.2s ease;
  }

  .category:hover {
    color: #333;
  }

  .highlighter {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 0;
    background-color: lightgreen;
    border-radius: 4px;
    opacity: 0;
    z-index: 0;
    pointer-events: none;
  }

</style>

<script>
  import { gsap } from "gsap";

  const menu = document.querySelector('.menu');
  const menuContent = document.querySelector('.menu-content');
  const highlighter = document.querySelector('.highlighter');
  const categories = document.querySelectorAll('.category');

  let previousCategory = null;
  let activeTimeline = null;



  categories.forEach((category) => {
      category.addEventListener('mouseenter', () => {
        if (activeTimeline) {
          activeTimeline.kill();
        }
        const menuContentRect = menuContent.getBoundingClientRect();
        const categoryRect = category.getBoundingClientRect();

        const targetLeft = categoryRect.left - menuContentRect.left;
        const targetWidth = categoryRect.width;
        const targetHeight = categoryRect.height;
        const targetTop = categoryRect.top - menuContentRect.top;

        console.log("Target Left:", targetLeft, "Target Width:", targetWidth);

        gsap.set(highlighter, {
          top: targetTop,
          height: targetHeight
        });

        activeTimeline = gsap.timeline();

        if (gsap.getProperty(highlighter, "opacity") == 0) {

          gsap.set(highlighter, {
            left: targetLeft,
            width: targetWidth,
          })

          activeTimeline.to(highlighter, {
            opacity: 1,
            duration: 0.2,
          })

        } else {
          if (previousCategory !== category && previousCategory) {
            const prevCategoryRect = previousCategory.getBoundingClientRect();
            const prevLeftRelative = prevCategoryRect.left - menuContentRect.left;
            const prevWidth = prevCategoryRect.width;
            const expandLeft = Math.min(targetLeft, prevLeftRelative);
            const expandRight = Math.max((targetLeft + targetWidth), (prevLeftRelative + prevWidth));
            const expandWidth = expandRight - expandLeft;

            activeTimeline
              .to(highlighter, {
                left: expandLeft,
                width: expandWidth,
                duration: 0.2,
                ease: "power2.inOut"
              })
              .to(highlighter, {
                left: targetLeft,
                width: targetWidth,
                duration: 0.2,
                ease: "power2.inOut"
              })
          } else {
            activeTimeline
              .to(highlighter, {
                left: targetLeft,
                width: targetWidth,
                opacity: 1,
                duration: 0.2,
                ease: "power2.inOut"
              })
          }
        }
        previousCategory = category;
      });
  })
</script>
